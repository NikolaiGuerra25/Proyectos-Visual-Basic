<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAQHX8Bf05V5FMshjoAAAAAElFTkSuQmCC
</value>
  </data>
</root>