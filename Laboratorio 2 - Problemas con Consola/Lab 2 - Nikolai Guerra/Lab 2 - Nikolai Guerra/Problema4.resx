<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorIc.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qXQ9AAAAAElFTkSuQmCC
</value>
  </data>
</root>